import React, { CSSProperties } from "react";

export interface ListItemProps {
    title?: string;
    prefix?: React.ReactNode;
    suffix?: React.ReactNode;
    subTitle?: string;
    brackets?: string;
    children?: React.ReactNode;
    style?: CSSProperties;
    className?: string;
    id?: string;
    onClick?: React.MouseEventHandler<HTMLElement>;
}

export interface ListProps<T> {
    dataSource?: T[];
    loading?: boolean;
    renderItem?: (item: T, index: number, loading?: boolean) => React.ReactNode;
    divider?: boolean;
    noSpacing?: boolean;
    children?: React.ReactNode;
    style?: CSSProperties;
    className?: string;
    id?: string;
}

export interface CompoundedComponent<T>
    extends React.ForwardRefExoticComponent<
        ListProps<T> & React.RefAttributes<HTMLUListElement>
    > {
    Item: React.FunctionComponent<ListItemProps>;
}

declare const List: CompoundedComponent<unknown>;

export default List;


