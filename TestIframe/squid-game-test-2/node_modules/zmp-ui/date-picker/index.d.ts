
	import React, { ReactNode } from "react";
import { OptionValueType, PickerColumnOption } from "../picker/props-type";

export type InputStatus = "" | "error" | "success";

export type DatePickerActionType = {
    text?: string;
    close?: boolean;
    onClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;
};

export enum ColumnFormat {
    "MM-DD-YYYY" = "MM-DD-YYYY",
    "DD-MM-YYYY" = "DD-MM-YYYY",
    "YYYY-MM-DD" = "YYYY-MM-DD",
}

export type DateColumns = PickerColumnOption;

export interface DatePickerProps {
    label?: string;
    helperText?: string;
    errorText?: string;
    status?: InputStatus;
    placeholder?: string;
    title?: string;
    disabled?: boolean;
    startDate?: Date;
    endDate?: Date;
    startYear?: number;
    endYear?: number;
    columnsFormat?: keyof typeof ColumnFormat;
    defaultValue?: Date;
    value?: Date;
    defaultOpen?: boolean;
    onChange?: (
        value: Date,
        pickedValue: {
            [name: string]: OptionValueType;
        }
    ) => void;
    onVisibilityChange?: (visibilityState: boolean) => void;
    mask?: boolean;
    maskClosable?: boolean;
    formatPickedValueDisplay?: (date: Date) => string;
    action?: DatePickerActionType;
    inputClass?: string;
    prefix?: ReactNode;
    suffix?: ReactNode;
    locale?: string;
    dateFormat?: string;
}

	declare const DatePicker: React.FunctionComponent<DatePickerProps>;

	export default DatePicker;
  