import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

import React, { useEffect } from "react";
import classNames from "clsx";
import { getPrefixCls } from "../../utils/class";
var Tab = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _classNames;

  var children = props.children,
      className = props.className,
      id = props.id,
      style = props.style,
      active = props.active,
      tabKey = props.tabKey,
      destroyInactiveTabPane = props.destroyInactiveTabPane;

  var _React$useState = React.useState(active),
      visited = _React$useState[0],
      setVisited = _React$useState[1];

  useEffect(function () {
    if (active) {
      setVisited(true);
    } else if (destroyInactiveTabPane) {
      setVisited(false);
    }
  }, [active, destroyInactiveTabPane]);
  var prefixCls = getPrefixCls("tab");
  var cls = classNames(prefixCls, (_classNames = {}, _classNames[prefixCls + "-active"] = active, _classNames), className);
  var mergedStyle = {};

  if (!active) {
    mergedStyle.display = "none";
  }

  return /*#__PURE__*/React.createElement("div", {
    id: id && id + "-tab-" + tabKey,
    role: "tabpanel",
    tabIndex: active ? 0 : -1,
    "aria-labelledby": id && id + "-tab-" + tabKey,
    "aria-hidden": !active,
    style: _objectSpread(_objectSpread({}, mergedStyle), style),
    ref: ref,
    className: cls
  }, (active || visited) && children);
});
export default Tab;