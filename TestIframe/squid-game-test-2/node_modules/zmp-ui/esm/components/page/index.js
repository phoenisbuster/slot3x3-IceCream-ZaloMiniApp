import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["className", "id", "style", "children", "resetScroll", "hideScrollbar"];
import React, { useImperativeHandle, useLayoutEffect, useRef } from "react";
import classNames from "clsx";
import { getPrefixCls } from "../../utils/class";
/**
 * Page component: Component wrapper ná»™i dung trang
 *
 * @category Container
 * @subCategory Page
 * @component
 *
 * @example
function HomePage(props){
    return (
        <Page>
            <Input label="Label" helperText="Helper text" />
        </Page>
    );
}
 */

var Page = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _classNames;

  var className = props.className,
      id = props.id,
      style = props.style,
      children = props.children,
      _props$resetScroll = props.resetScroll,
      resetScroll = _props$resetScroll === void 0 ? true : _props$resetScroll,
      _props$hideScrollbar = props.hideScrollbar,
      hideScrollbar = _props$hideScrollbar === void 0 ? false : _props$hideScrollbar,
      rest = _objectWithoutPropertiesLoose(props, _excluded);

  var prefixCls = getPrefixCls("page");
  var pageRef = useRef();
  var cls = classNames(prefixCls, (_classNames = {}, _classNames[prefixCls + "-hide-scrollbar"] = hideScrollbar, _classNames), className);
  useImperativeHandle(ref, function () {
    return pageRef.current;
  });
  useLayoutEffect(function () {
    if (resetScroll) {
      var page = pageRef.current;
      page == null ? void 0 : page.scrollTo(0, 0);
    }
  }, [pageRef, resetScroll]);
  return /*#__PURE__*/React.createElement("div", _extends({}, rest, {
    className: cls,
    id: id,
    style: style,
    ref: pageRef
  }), children);
});
export default Page;