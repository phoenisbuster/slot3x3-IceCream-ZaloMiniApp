import { iBeaconInfo, userInfo } from './entity';
import { NetworkType } from './enum';
export declare type NativeCallBackData = {
    error_code: number;
    error_message: string;
    action: string;
    data: any;
};
/**
 * Network type success callback
 * @typedef NetworkTypeSuccessCallback
 */
export declare type NetworkTypeSuccessCallback = {
    /** Network Type */
    networkType: NetworkType;
};
/**
 * Get iBeacon success callback
 * @typedef IBeaconSuccessCallback
 */
export declare type IBeaconSuccessCallback = {
    /** The list of iBeacon devices */
    beacons: Array<iBeaconInfo>;
};
/**
 * Get user info success callback
 * @typedef GetUserInfoSuccessCallback
 */
export declare type GetUserInfoSuccessCallback = {
    /** user info */
    userInfo: userInfo;
};
/**
 * Get location success callback
 * @typedef GetLocationSuccessCallback
 */
export declare type GetLocationSuccessCallback = {
    /** latitude */
    latitude: string;
    /** longitude */
    longitude: string;
    /** timestamp */
    timestamp: string;
    /** provider */
    provider: string;
};
/**
 * Open QR success callback
 * @typedef OpenQRSuccessCallback
 */
export declare type OpenQRSuccessCallback = {
    /** content of qr code */
    content: string;
};
/**
 * Post feed success callback
 * @typedef PostFeedSuccessCallback
 */
export declare type PostFeedSuccessCallback = {
    /** status */
    status: 0 | 1;
    shareType: 0 | 1 | 2;
    numberOfUser: number;
};
/**
 * Share sheet success callback
 * @typedef ShareSheetSuccessCallback
 */
export declare type ShareSheetSuccessCallback = {
    /** status */
    status: 0 | 1 | 2;
    shareType: 0 | 1 | 2;
    numberOfUser: number;
};
/**
 * Request camera permission success callback
 * @typedef RequestCameraPermissionSuccessCallback
 */
export declare type RequestCameraPermissionSuccessCallback = {
    /** status */
    userAllow: boolean;
    /** message */
    message: string;
};
/**
 * Request BioAuthentication success callback
 * @typedef RequestBioAuthenticationSuccessCallback
 */
export declare type RequestBioAuthenticationSuccessCallback = {
    /** status */
    code: number;
    /** message */
    message: string;
    data: {
        domain: string;
        code: number;
        message: string;
        payToken: string;
    };
};
/**
 * Check State BioAuthentication success callback
 * @typedef CheckStateBioAuthenticationSuccessCallback
 */
export declare type CheckStateBioAuthenticationSuccessCallback = {
    bioState: string;
};
/**
 * app info success callback
 * @typedef AppInfoSuccessCallBack
 */
export declare type AppInfoSuccessCallBack = {
    description: string;
    version: string;
    name: string;
    appUrl: string;
    qrCodeUrl: string;
    logoUrl?: string;
};
/**
 * get phone number success callback
 * @typedef GetPhoneNumberSuccessCallBack
 */
export declare type GetPhoneNumberSuccessCallBack = {
    number: string;
};
/**
 * open profile success callback
 * @typedef OpenProfilePickerSuccessCallBack
 */
export declare type OpenProfilePickerSuccessCallBack = {
    users: Array<{
        id: string;
        profile: {
            name: string;
            avatar: string;
        };
        code: number;
        message: string;
    }>;
};
/**
 * get actions supported
 * @typedef GetActionsSupportedSuccessCallBack
 */
export declare type GetActionsSupportedSuccessCallBack = {
    actions: Array<string>;
};
/**
 * open media picker success callback
 * @typedef OpenMediaPickerSuccessCallBack
 */
export declare type OpenMediaPickerSuccessCallBack = {
    data: string;
};
/**
 * open create order success callback
 * @typedef CreateOrderCallBack
 */
export declare type CreateOrderCallBack = {
    orderId: string;
};
/**
 * get transaction success callback
 * @typedef CheckTransactionSuccessCallBack
 */
export declare type CheckTransactionSuccessCallBack = {
    msg: string;
    orderId: string;
    transId: string;
    resultCode: number;
    transTime: string;
    createdAt: string;
};
/**
 * Request auth code
 * @typedef GetAuthCodeSuccessCallback
 */
export declare type GetAuthCodeSuccessCallback = {
    /** authCode */
    authCode: string;
    /** authCodeVrf */
    authCodeVerify: string;
};
