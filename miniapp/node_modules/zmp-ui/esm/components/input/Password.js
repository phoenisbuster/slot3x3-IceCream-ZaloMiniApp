import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["className", "visibilityToggle"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

import React, { useState } from "react";
import classNames from "clsx";
import EyeIcon from "./icons/eye";
import EyeInvisibleIcon from "./icons/eye-invisible";
import Input from "./Input";
import { getPrefixCls } from "../../utils/class";
import omit from "../../utils/omit";
var Password = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _useState = useState(false),
      visible = _useState[0],
      setVisible = _useState[1];

  var onVisibleChange = function onVisibleChange() {
    var disabled = props.disabled;

    if (disabled) {
      return;
    }

    setVisible(!visible);
  };

  var getIcon = function getIcon(prefixCls) {
    var _props$iconRender = props.iconRender,
        iconRender = _props$iconRender === void 0 ? function () {
      return null;
    } : _props$iconRender;
    var icon = iconRender(visible);
    var iconProps = {
      onClick: onVisibleChange,
      className: prefixCls + "-icon",
      key: "passwordIcon",
      onMouseDown: function onMouseDown(e) {
        e.preventDefault();
      },
      onMouseUp: function onMouseUp(e) {
        e.preventDefault();
      }
    };
    return /*#__PURE__*/React.cloneElement( /*#__PURE__*/React.isValidElement(icon) ? icon : /*#__PURE__*/React.createElement("span", null, icon), iconProps);
  };

  var renderPassword = function renderPassword() {
    var className = props.className,
        visibilityToggle = props.visibilityToggle,
        restProps = _objectWithoutPropertiesLoose(props, _excluded);

    var prefixCls = getPrefixCls("input-password");
    var suffixIcon = visibilityToggle && getIcon(prefixCls);
    var inputClassName = classNames(prefixCls, className);

    var omittedProps = _objectSpread(_objectSpread({}, omit(restProps, ["suffix", "iconRender"])), {}, {
      type: visible ? "text" : "password",
      className: inputClassName,
      suffix: suffixIcon
    });

    return /*#__PURE__*/React.createElement(Input, _extends({
      ref: ref
    }, omittedProps));
  };

  return renderPassword();
});
Password.defaultProps = {
  visibilityToggle: true,
  iconRender: function iconRender(visible) {
    return visible ? /*#__PURE__*/React.createElement(EyeIcon, null) : /*#__PURE__*/React.createElement(EyeInvisibleIcon, null);
  }
};
export default Password;