import React from "react";

export type CheckboxValueType = string | number;

/**
 * @category Data Entry
 * @subcategory Checkbox
 * @enum {string}
 */
export enum CheckBoxSize {
    /** Size medium */
    medium = "medium",
    /** Size small */
    small = "small",
}
/**
 * @category Data Entry
 * @subcategory Checkbox
 * @displayName Checkbox
 */
export interface CheckboxProps {
    /** Trạng thái của checkbox */
    checked?: boolean;
    /** Trạng thái mặc định của checkbox */
    defaultChecked?: boolean;
    className?: string;
    style?: React.CSSProperties;
    /** Disable checkbox */
    disabled?: boolean;
    id?: string;
    /** Tên của checkbox */
    name?: string;
    /** Nhãn của checkbox. Sẽ được hiển thị phía sau tick icon */
    label?: string;
    /**
     * Giá trị của checkbox
     *
     * @type {string | number}
     */
    value: CheckboxValueType;
    /**
     * Kích thước checkbox
     *
     * @type CheckBoxSize
     */
    size?: keyof typeof CheckBoxSize;
    /** Nếu bật, checkbox sẽ có thêm trạng thái không xác định */
    indeterminate?: boolean;
    children?: React.ReactNode;
    /**
     *  Thêm event handler khi trạng thái checkbox thay đôi
     * @function onChange
     * @param {any} event event
     */
    onChange?: (event: any) => void;
}

/**
 * @category Data Entry
 * @subcategory Checkbox
 * @displayName Checkbox.Group
 */
export interface CheckboxGroupProps {
    /** Giá trị mặc định của group */
    defaultValue?: CheckboxValueType[];
    value?: CheckboxValueType[];
    disabled?: boolean;
    name?: string;
    size?: keyof typeof CheckBoxSize;
    className?: string;
    style?: React.CSSProperties;
    /**
     * Mảng các checkbox sẽ hiển thị trong group
     *
     * @type Array
     */
    options?: CheckboxProps[];
    onChange?: (checkedValue: CheckboxValueType[]) => void;
    children?: React.ReactNode;
}

export interface CheckboxGroupContext {
    name?: string;
    value: CheckboxValueType[];
    disabled?: boolean;
    size?: keyof typeof CheckBoxSize;
    registerValue?: (val: CheckboxValueType) => void;
    toggleOption?: (option: CheckboxProps) => void;
}

export interface CompoundedComponent
    extends React.ForwardRefExoticComponent<
        CheckboxProps & React.RefAttributes<HTMLInputElement>
    > {
    Group: React.FunctionComponent<CheckboxGroupProps>;
}

declare const Checkbox: CompoundedComponent;

export default Checkbox;


