import {
    CSSProperties,
    ForwardRefExoticComponent,
    RefAttributes,
    RefObject,
} from "react";

export interface SwiperRefObject {
    activeIndex: number;
    goTo: (slideIndex: number) => void;
    next: () => void;
    prev: () => void;
}

export interface SwiperProps {
    autoplay?: boolean;
    afterChange?: (currentIndex: number) => void;
    defaultActive?: number;
    dots?: boolean;
    children?: React.ReactNode;
    ref?: RefObject<SwiperRefObject>;
    style?: CSSProperties;
    className?: string;
    loop?: boolean;
    duration?: number;
    id?: string;
    disableSwipe?: boolean;
}

export interface SwiperSlideProps {
    children?: React.ReactNode;
    style?: CSSProperties;
    className?: string;
    id?: string;
}

export interface SlideProps extends SwiperProps {
    index: number;
}

export interface SwiperSlide extends SwiperSlideProps {
    key: string;
    node: React.ReactElement;
}

export interface SwiperContextType {
    activeIndex: number;
    slides: SwiperSlide[];
}

export interface CompoundedComponent
    extends ForwardRefExoticComponent<
        SwiperProps & RefAttributes<SwiperRefObject>
    > {
    Slide: ForwardRefExoticComponent<
        SwiperSlideProps & RefAttributes<HTMLDivElement>
    >;
}

declare const Swiper: CompoundedComponent;

export default Swiper;


