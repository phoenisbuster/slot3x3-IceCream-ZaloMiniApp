
	import { CSSProperties, RefObject } from "react";

export type ImageType = {
    src: string;
    alt?: string;
};

export interface ImageProps extends ImageType {
    className?: string;
    style?: CSSProperties;
    id?: string;
    ref?: RefObject<HTMLDivElement>;
}
export interface ImageViewerProps {
    images: Array<ImageType>;
    activeIndex?: number;
    visible?: boolean;
    maskStyle?: CSSProperties;
    maskClassName?: string;
    className?: string;
    style?: CSSProperties;
    id?: string;
    ref?: RefObject<HTMLDivElement>;
    onClose?: () => void;
}

type CallBackFunc<T> = (val: T) => void;

export type ImageViewerContextType = {
    currentIndex: number;
    isZoomed?: boolean;
    setIsZoomed?: (isZoomed: boolean | CallBackFunc<boolean>) => void;
    showHeader?: boolean;
    setShowHeader?: (show: boolean | CallBackFunc<boolean>) => void;
};

	declare const ImageViewer: React.FunctionComponent<ImageViewerProps>;

	export default ImageViewer;
  