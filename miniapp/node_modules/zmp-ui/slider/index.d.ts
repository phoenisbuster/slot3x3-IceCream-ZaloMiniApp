
	export type SliderValue = number | [number, number];
export type SliderMarks = number[];

export interface SliderProps {
    min?: number;
    max?: number;
    step?: number;
    minRange?: number;
    name?: string;
    label?: string;
    showValue?: boolean;
    marks?: boolean | SliderMarks;
    renderValue?: (value: SliderValue) => React.ReactNode;
    prefix?: React.ReactNode;
    suffix?: React.ReactNode;
    value?: SliderValue;
    defaultValue?: SliderValue;
    onChange?: (value: SliderValue) => void;
}

export interface SliderTrackProps {
    offset: number;
    width: number;
    marks?: SliderMarks;
    onMouseEnter?: React.MouseEventHandler;
    onMouseLeave?: React.MouseEventHandler;
    children?: React.ReactNode;
}

export interface SliderThumbProps {
    position: number;
}

export interface SliderMarkProps {
    position: number;
    filled?: boolean;
}

export interface MoveEvent {
    x: number;
    y: number;
}

	declare const Slider: React.FunctionComponent<SliderProps>;

	export default Slider;
  