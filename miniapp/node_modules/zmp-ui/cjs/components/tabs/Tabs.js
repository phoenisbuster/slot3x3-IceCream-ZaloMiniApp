"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _clsx = _interopRequireDefault(require("clsx"));

var _class = require("../../utils/class");

var _TabContext = _interopRequireDefault(require("./TabContext"));

var _useMergedState3 = _interopRequireDefault(require("../../hooks/useMergedState"));

var _TabList = _interopRequireDefault(require("./TabList"));

var _TabBar = _interopRequireDefault(require("./TabBar"));

var _utils = require("./utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var Tabs = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {
  var _classNames;

  var children = props.children,
      className = props.className,
      activeKey = props.activeKey,
      defaultActiveKey = props.defaultActiveKey,
      id = props.id,
      onChange = props.onChange,
      onTabClick = props.onTabClick,
      renderTabBar = props.renderTabBar,
      scrollable = props.scrollable,
      bottomBar = props.bottomBar,
      destroyInactiveTabPane = props.destroyInactiveTabPane;
  var tabbarRef = (0, _react.useRef)();
  var tabs = (0, _utils.parseTabList)(children);
  var tabKeys = tabs.map(function (tab) {
    return tab.key;
  }).join("_");

  var _useMergedState = (0, _useMergedState3.default)(function () {
    var _tabs$;

    return (_tabs$ = tabs[0]) == null ? void 0 : _tabs$.key;
  }, {
    value: activeKey,
    defaultValue: defaultActiveKey
  }),
      mergedActiveKey = _useMergedState[0],
      setMergedActiveKey = _useMergedState[1];

  var _useMergedState2 = (0, _useMergedState3.default)(null, {
    value: id
  }),
      mergedId = _useMergedState2[0];

  var _useState = (0, _react.useState)(function () {
    return tabs.findIndex(function (tab) {
      return tab.key === mergedActiveKey;
    });
  }),
      activeIndex = _useState[0],
      setActiveIndex = _useState[1];

  (0, _react.useEffect)(function () {
    var newActiveIndex = tabs.findIndex(function (tab) {
      return tab.key === mergedActiveKey;
    });

    if (newActiveIndex === -1) {
      var _tabs$newActiveIndex;

      newActiveIndex = Math.max(0, Math.min(activeIndex, tabs.length - 1));
      setMergedActiveKey((_tabs$newActiveIndex = tabs[newActiveIndex]) == null ? void 0 : _tabs$newActiveIndex.key);
    }

    setActiveIndex(newActiveIndex);
  }, [mergedActiveKey, activeIndex, tabs, tabKeys, setMergedActiveKey]);

  var onInternalTabClick = function onInternalTabClick(key, e) {
    onTabClick == null ? void 0 : onTabClick(key, e);
    var isActiveChanged = key !== mergedActiveKey;
    setMergedActiveKey(key);

    if (isActiveChanged) {
      onChange == null ? void 0 : onChange(key);
    }
  };

  var sharedProps = {
    id: mergedId || undefined,
    activeKey: mergedActiveKey
  };
  var prefixCls = (0, _class.getPrefixCls)("tabs");
  var cls = (0, _clsx.default)(prefixCls, (_classNames = {}, _classNames[prefixCls + "-bottom"] = bottomBar, _classNames), className);

  var tabbarProps = _objectSpread(_objectSpread({}, sharedProps), {}, {
    onTabClick: onInternalTabClick,
    panes: children,
    scrollable: scrollable
  });

  var tabBar = renderTabBar ? renderTabBar(tabbarProps) : /*#__PURE__*/_react.default.createElement(_TabBar.default, (0, _extends2.default)({
    ref: tabbarRef
  }, tabbarProps, {
    id: tabbarProps.id || ""
  }));
  var tabContext = (0, _react.useMemo)(function () {
    return {
      tabs: tabs
    };
  }, [tabs]);
  return /*#__PURE__*/_react.default.createElement(_TabContext.default.Provider, {
    value: tabContext
  }, /*#__PURE__*/_react.default.createElement("div", {
    ref: ref,
    className: cls
  }, !bottomBar && tabBar, /*#__PURE__*/_react.default.createElement(_TabList.default, (0, _extends2.default)({
    destroyInactiveTabPane: destroyInactiveTabPane
  }, sharedProps)), bottomBar && tabBar));
});

var _default = Tabs;
exports.default = _default;