"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _clsx = _interopRequireDefault(require("clsx"));

var _button = _interopRequireDefault(require("../button"));

var _icon = _interopRequireDefault(require("../icon"));

var _class = require("../../utils/class");

var _context = require("./context");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var SelectPanel = function SelectPanel(props) {
  var className = props.className,
      optionsList = props.optionsList,
      title = props.title;
  var selectContext = (0, _react.useContext)(_context.Context);
  var _ref = selectContext,
      disabled = _ref.disabled,
      value = _ref.value,
      updateValue = _ref.updateValue,
      closeSelectSheet = _ref.closeSelectSheet;
  var prefixCls = (0, _class.getPrefixCls)("select");
  var panelPrefixCls = prefixCls + "-panel";
  var cls = (0, _clsx.default)(panelPrefixCls, {}, className);

  var renderOptions = function renderOptions(options) {
    var content = [];
    options.forEach(function (otp) {
      if (otp.group) {
        content.push( /*#__PURE__*/_react.default.createElement("div", {
          className: prefixCls + "-group",
          key: otp.key
        }, otp.label));
      } else {
        var _otp$value, _classNames;

        var isSelected = Array.isArray(value) ? value.find(function (val) {
          return val === otp.value;
        }) : value.toString() === (otp == null ? void 0 : (_otp$value = otp.value) == null ? void 0 : _otp$value.toString());
        var itemCls = (0, _clsx.default)(prefixCls + "-option", (_classNames = {}, _classNames[prefixCls + "-option-selected"] = isSelected, _classNames[prefixCls + "-option-disabled"] = disabled || otp.data.disabled, _classNames));
        content.push( /*#__PURE__*/_react.default.createElement("div", {
          key: otp.value,
          className: itemCls,
          role: "presentation",
          onClick: function onClick() {
            if (!disabled && !otp.data.disabled && otp.value !== undefined) {
              updateValue == null ? void 0 : updateValue(otp.value);
            }
          }
        }, /*#__PURE__*/_react.default.createElement("span", null, otp.label), isSelected && /*#__PURE__*/_react.default.createElement(_icon.default, {
          className: prefixCls + "-option-check-icon",
          icon: "zi-check"
        })));
      }
    });
    return content;
  };

  var closeModal = function closeModal() {
    closeSelectSheet == null ? void 0 : closeSelectSheet();
  };

  return /*#__PURE__*/_react.default.createElement("div", {
    className: cls
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: prefixCls + "-header"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: prefixCls + "-title"
  }, title), /*#__PURE__*/_react.default.createElement(_button.default, {
    type: "neutral",
    variant: "tertiary",
    className: prefixCls + "-close-icon",
    icon: /*#__PURE__*/_react.default.createElement(_icon.default, {
      icon: "zi-close"
    }),
    onClick: closeModal
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: prefixCls + "-options"
  }, renderOptions(optionsList)));
};

var _default = SelectPanel;
exports.default = _default;