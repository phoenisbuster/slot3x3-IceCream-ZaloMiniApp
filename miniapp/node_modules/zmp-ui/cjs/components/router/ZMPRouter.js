"use strict";

exports.__esModule = true;
exports.default = exports.AnimationRouterContext = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactRouterDom = require("react-router-dom");

var _constant = require("./common/constant");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * ZMPRouter component: Wrapper thay thể cho BrowserRouter của react-router, component này config sẵn basename để có thể định tuyến trên mini app
 *
 * @category Router
 * @catPosition 2
 * @subcategory ZMPRouter
 * @component
 * @typedef {object} ZMPRouter
 * @prop {ReactNode} children là routes wrapper có thể là AnimationRoutes của zmp-ui hoặc Routes của react-router-dom
 *
 *
 * @example <data>{"live": false}</data>
 function MyApp(props){
    return (
        <App>
            <ZMProuter>
                 <AnimationRoutes>
                     <Route path="/" element={<HomePage />} />
                     <Route path="/page1" element={<Page1 />} />
                </AnimationRoutes>
            </ZMPRouter>
        </App>
    );
}
 */
var AnimationRouterContext = /*#__PURE__*/_react.default.createContext(undefined);

exports.AnimationRouterContext = AnimationRouterContext;

var ZMPRouter = function ZMPRouter(props) {
  var _useState = (0, _react.useState)(true),
      animate = _useState[0],
      setAnimate = _useState[1];

  var _useState2 = (0, _react.useState)(_constant.PAGE_TRANSITION_DIRECTION.FORWARD),
      direction = _useState2[0],
      setDirection = _useState2[1];

  var pageScrollPosition = (0, _react.useRef)({});
  var children = props.children,
      memoryRouter = props.memoryRouter;
  var basepath = process.env.NODE_ENV === "production" ? "/zapps/" + window.APP_ID : "";
  var handleSetAnimate = (0, _react.useCallback)(function (_ref) {
    var _ref$animate = _ref.animate,
        ani = _ref$animate === void 0 ? true : _ref$animate,
        _ref$direction = _ref.direction,
        dir = _ref$direction === void 0 ? _constant.PAGE_TRANSITION_DIRECTION.FORWARD : _ref$direction;
    setAnimate(!!ani);
    var correctDirection = [_constant.PAGE_TRANSITION_DIRECTION.FORWARD, _constant.PAGE_TRANSITION_DIRECTION.BACKWARD].some(function (item) {
      return item === dir;
    }) ? dir : _constant.PAGE_TRANSITION_DIRECTION.FORWARD;
    setDirection(correctDirection);
  }, [setAnimate, setDirection]);

  var updateScrollPosition = function updateScrollPosition(key, position) {
    // eslint-disable-next-line security/detect-object-injection
    pageScrollPosition.current[key] = position;
  };

  var contextValue = (0, _react.useMemo)(function () {
    return {
      setAnimate: handleSetAnimate,
      animate: animate,
      direction: direction,
      pageScrollPosition: pageScrollPosition.current,
      updatePosition: updateScrollPosition
    };
  }, [animate, direction, handleSetAnimate]);
  var RouterComponent = memoryRouter ? _reactRouterDom.MemoryRouter : _reactRouterDom.BrowserRouter;
  return /*#__PURE__*/_react.default.createElement(AnimationRouterContext.Provider, {
    value: contextValue
  }, /*#__PURE__*/_react.default.createElement(RouterComponent, {
    basename: basepath
  }, children));
};

ZMPRouter.displayName = "zaui-router";
var _default = ZMPRouter;
exports.default = _default;