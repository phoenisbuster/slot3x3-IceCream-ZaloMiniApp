"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _clsx = _interopRequireDefault(require("clsx"));

var _reactRouterDom = require("react-router-dom");

var _reactTransitionGroup = require("react-transition-group");

var _class = require("../../utils/class");

var _device = require("../../utils/device");

var _context = _interopRequireDefault(require("./context"));

var _excluded = ["element"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

/**
 * AnimationRoutes component: Wrapper thay thế cho Routes của react-router, component này thêm hiệu ứng khi chuyển trang
 *
 * @category Router
 * @catPosition 2
 * @subcategory AnimationRoutes
 * @component
 * @typedef {object} AnimationRoutes
 * @prop {ReactNode} children Các Route page
 *
 *
 * @example <data>{"live": false}</data>
 function MyApp(props){
    return (
        <App>
            <ZMProuter>
                 <AnimationRoutes>
                     <Route path="/" element={<HomePage />} />
                     <Route path="/page1" element={<Page1 />} />
                </AnimationRoutes>
            </ZMPRouter>
        </App>
    );
}
 */
var AnimationRoutes = function AnimationRoutes(props) {
  var _classNames;

  var _useState = (0, _react.useState)(true),
      animate = _useState[0],
      setAnimate = _useState[1];

  var navigationType = (0, _reactRouterDom.useNavigationType)();
  var children = props.children;
  var location = (0, _reactRouterDom.useLocation)();
  var pathname = location.pathname;
  var initialX = (0, _react.useRef)(null);
  var initialY = (0, _react.useRef)(null);
  var nodeRefs = (0, _react.useRef)({});
  var direction = (0, _react.useRef)("");
  var prefixCls = (0, _class.getPrefixCls)("routes");

  var getKey = function getKey(path) {
    if (!path) return "";
    var pathToCompare = path.charAt(0) !== "/" ? "/" + path : path;

    if (pathToCompare.lastIndexOf("/") > 0) {
      pathToCompare = pathToCompare.substring(0, pathToCompare.length - 1);
    }

    return pathToCompare;
  };

  var routList = (0, _react.useMemo)(function () {
    return _react.Children.map(children, function (child) {
      if ( /*#__PURE__*/_react["default"].isValidElement(child)) {
        var _child$props = child.props,
            element = _child$props.element,
            restProps = (0, _objectWithoutPropertiesLoose2["default"])(_child$props, _excluded);
        nodeRefs.current[getKey(child.props.path)] = /*#__PURE__*/(0, _react.createRef)();
        if (!element || element.props.replace === true) return child;
        return _objectSpread(_objectSpread({}, child), {}, {
          props: _objectSpread(_objectSpread({}, restProps), {}, {
            element: element
          })
        });
      }

      return child;
    });
  }, [children]);

  var startTouch = function startTouch(e) {
    initialX.current = e.touches[0].clientX;
    initialY.current = e.touches[0].clientY;
  };

  var moveTouch = function moveTouch(e) {
    if (initialX.current === null) {
      return;
    }

    if (initialY.current === null) {
      return;
    }

    var currentX = e.touches[0].clientX;
    var currentY = e.touches[0].clientY;
    var diffX = initialX.current - currentX;
    var diffY = initialY.current - currentY;

    if (initialX.current <= 24 && Math.abs(diffX) > Math.abs(diffY) && diffX <= 0 && animate) {
      e.preventDefault();
      setAnimate(false);
      e.preventDefault();
    }

    initialX.current = null;
    initialY.current = null;
  };

  (0, _react.useEffect)(function () {
    var isIOS = (0, _device.iOS)();

    if (isIOS) {
      document.addEventListener("touchstart", startTouch, {
        passive: false
      });
      document.addEventListener("touchmove", moveTouch, {
        passive: false
      });
    }

    return function () {
      if (isIOS) {
        document.removeEventListener("touchstart", startTouch);
        document.removeEventListener("touchmove", moveTouch);
      }
    };
  }, []);
  var contextValue = (0, _react.useMemo)(function () {
    return {
      animate: animate
    };
  }, [animate]);

  if (animate) {
    direction.current = navigationType === _reactRouterDom.NavigationType.Pop ? "backward" : "forward";
  }

  var animationCls = (0, _clsx["default"])((_classNames = {}, _classNames[prefixCls + "-" + direction.current] = animate, _classNames[prefixCls + "-no-animation"] = !animate, _classNames));
  var wrapperCls = (0, _clsx["default"])(prefixCls, {});
  var nodeRef = nodeRefs.current[getKey(pathname)];
  return /*#__PURE__*/_react["default"].createElement(_context["default"].Provider, {
    value: contextValue
  }, /*#__PURE__*/_react["default"].createElement(_reactTransitionGroup.TransitionGroup, {
    className: wrapperCls,
    childFactory: function childFactory(child) {
      return /*#__PURE__*/(0, _react.cloneElement)(child, {
        classNames: animationCls,
        timeout: animate ? 400 : 200
      });
    }
  }, /*#__PURE__*/_react["default"].createElement(_reactTransitionGroup.CSSTransition, {
    key: pathname,
    timeout: animate ? 400 : 200,
    onExited: function onExited() {
      setAnimate(true);
    },
    nodeRef: nodeRef,
    unmountOnExit: true
  }, /*#__PURE__*/_react["default"].createElement("div", {
    ref: nodeRef,
    className: prefixCls + "-item"
  }, /*#__PURE__*/_react["default"].createElement(_reactRouterDom.Routes, {
    location: location
  }, routList)))));
};

AnimationRoutes.displayName = "zaui-animation-router";
var _default = AnimationRoutes;
exports["default"] = _default;