"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _clsx = _interopRequireDefault(require("clsx"));

var _class = require("../../utils/class");

var _context = require("./context");

var _TickIcon = _interopRequireDefault(require("./TickIcon"));

var _excluded = ["className", "children", "disabled", "style", "defaultChecked", "size", "label", "indeterminate"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var Checkbox = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {
  var _classNames;

  var className = props.className,
      children = props.children,
      disabled = props.disabled,
      style = props.style,
      defaultChecked = props.defaultChecked,
      size = props.size,
      label = props.label,
      _props$indeterminate = props.indeterminate,
      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,
      restProps = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
  var checkboxGroup = (0, _react.useContext)(_context.GroupContext);
  var mergedDisabled = disabled || (checkboxGroup == null ? void 0 : checkboxGroup.disabled);
  var checkboxRef = (0, _react.useRef)();

  var checkboxProps = _objectSpread({}, restProps);

  if (checkboxGroup) {
    checkboxProps.name = checkboxGroup.name;
    checkboxProps.checked = checkboxGroup.value.indexOf(restProps.value) !== -1;
  }

  var _useState = (0, _react.useState)("checked" in restProps ? restProps.checked : defaultChecked),
      checked = _useState[0],
      setChecked = _useState[1];

  (0, _react.useEffect)(function () {
    checkboxGroup == null ? void 0 : checkboxGroup.registerValue == null ? void 0 : checkboxGroup.registerValue(restProps.value);
  }, []);
  (0, _react.useImperativeHandle)(ref, function () {
    return checkboxRef == null ? void 0 : checkboxRef.current;
  });
  var prefixCls = (0, _class.getPrefixCls)("checkbox");
  var checkboxSize = size || (checkboxGroup == null ? void 0 : checkboxGroup.size);
  var inputChecked = checkboxProps.checked !== undefined ? checkboxProps.checked : checked;
  var cls = (0, _clsx.default)(prefixCls + "-wrapper", (_classNames = {}, _classNames[prefixCls + "-checked"] = inputChecked, _classNames[prefixCls + "-disabled"] = mergedDisabled, _classNames[prefixCls + "-" + checkboxSize] = checkboxSize, _classNames[prefixCls + "-indeterminate"] = !inputChecked && indeterminate, _classNames), className);
  var checkboxCls = (0, _clsx.default)(["" + prefixCls], {});
  var ariaChecked = indeterminate ? "mixed" : undefined;

  var handleOnChange = function handleOnChange(e) {
    if (!("checked" in checkboxProps)) {
      setChecked(e.target.checked);
    }

    if (checkboxGroup && checkboxGroup.toggleOption) {
      checkboxGroup.toggleOption({
        label: children || label,
        value: restProps.value
      });
    }

    restProps.onChange == null ? void 0 : restProps.onChange({
      target: _objectSpread(_objectSpread({}, props), {}, {
        checked: e.target.checked
      }),
      stopPropagation: function stopPropagation() {
        e.stopPropagation();
      },
      preventDefault: function preventDefault() {
        e.preventDefault();
      },
      nativeEvent: e.nativeEvent
    });
  };

  return (
    /*#__PURE__*/
    // eslint-disable-next-line jsx-a11y/label-has-associated-control
    _react.default.createElement("label", {
      className: cls,
      style: style
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: checkboxCls
    }, /*#__PURE__*/_react.default.createElement("input", (0, _extends2.default)({}, checkboxProps, {
      className: prefixCls + "-input",
      checked: !!inputChecked,
      ref: checkboxRef,
      type: "checkbox",
      "aria-checked": ariaChecked,
      disabled: disabled,
      onChange: handleOnChange
    })), /*#__PURE__*/_react.default.createElement("span", {
      className: prefixCls + "-inner"
    }, !!inputChecked && /*#__PURE__*/_react.default.createElement("span", {
      className: prefixCls + "-inner-check-icon"
    }, /*#__PURE__*/_react.default.createElement(_TickIcon.default, null)))), children ? /*#__PURE__*/_react.default.createElement("span", null, children) : /*#__PURE__*/_react.default.createElement("span", null, label))
  );
});

Checkbox.displayName = "zaui-checkbox";
var _default = Checkbox;
exports.default = _default;