"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _clsx = _interopRequireDefault(require("clsx"));

var _react = _interopRequireWildcard(require("react"));

var _class = require("../../utils/class");

var _excluded = ["visible", "afterClose", "maskClosable", "onClose", "children", "style", "className"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var ModalWrapper = function ModalWrapper(props) {
  var _props$visible = props.visible,
      visible = _props$visible === void 0 ? false : _props$visible,
      afterClose = props.afterClose,
      _props$maskClosable = props.maskClosable,
      maskClosable = _props$maskClosable === void 0 ? true : _props$maskClosable,
      onClose = props.onClose,
      children = props.children,
      style = props.style,
      className = props.className,
      rest = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);

  var _useState = (0, _react.useState)(visible),
      animatedVisible = _useState[0],
      setAnimatedVisible = _useState[1];

  var wrapperRef = (0, _react.useRef)();
  var contentClickRef = (0, _react.useRef)(false);
  var contentTimeoutRef = (0, _react.useRef)();
  (0, _react.useEffect)(function () {
    var pageElement = document.querySelector(".zaui-page");

    if (visible) {
      if (pageElement) {
        pageElement.classList.add("disable-scrolling");
      }

      setAnimatedVisible(true);
    } else if (pageElement) {
      pageElement.classList.remove("disable-scrolling");
    }
  }, [visible]);

  var onVisibleChange = function onVisibleChange(newVisible) {
    if (!newVisible) {
      setAnimatedVisible(false);
      afterClose == null ? void 0 : afterClose();
    }
  };

  var onContentMouseDown = function onContentMouseDown() {
    clearTimeout(contentTimeoutRef.current);
    contentClickRef.current = true;
  };

  var onContentMouseUp = function onContentMouseUp() {
    contentTimeoutRef.current = setTimeout(function () {
      contentClickRef.current = false;
    });
  };

  var onWrapperClick = function onWrapperClick(e) {
    if (!maskClosable) {
      return;
    }

    if (contentClickRef.current) {
      contentClickRef.current = false;
    } else if (wrapperRef.current === e.target) {
      onClose == null ? void 0 : onClose(e);
    }
  };

  var prefixCls = (0, _class.getPrefixCls)("modal-wrapper");
  var cls = (0, _clsx.default)(prefixCls, className);
  return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({}, rest, {
    ref: wrapperRef,
    onClick: onWrapperClick,
    style: _objectSpread({
      display: !animatedVisible ? "none" : undefined
    }, style || {}),
    className: cls,
    role: "presentation"
  }), /*#__PURE__*/_react.default.cloneElement(children, {
    onMouseDown: onContentMouseDown,
    onMouseUp: onContentMouseUp,
    onVisibleChanged: onVisibleChange
  }));
};

var _default = ModalWrapper;
exports.default = _default;