import React from "react";

export enum StoryStatus {
    seen = "seen",
    default = "default",
}

export enum GradientVariants {
    "BLUE-BLUELIGHT" = "BLUE-BLUELIGHT",
    "PURPLE-BLUE" = "PURPLE-BLUE",
    "SKYBLUE-GREEN" = "SKYBLUE-GREEN",
    "GREEN-GREENLIGHT" = "GREEN-GREENLIGHT",
}

/**
 * @category Data Display
 * @subcategory Avatar
 * @displayName Avatar
 */
export interface AvatarProps {
    id?: string;
    className?: string;
    style?: React.CSSProperties;
    /**
     * Hiển thị trạng thái online của Avatar
     *
     * @defaultvalue false
     */
    online?: boolean;
    /**
     * Nhận các giá trị: `default`, `seen`
     *
     * @type string
     */
    story?: keyof typeof StoryStatus;
    /** Kích thước avatar */
    size?: number;
    /** `src` cho thẻ `img` của avatar */
    src?: string;
    uploadingStory?: boolean;
    /**
     * Màu nền của avatar. Nhận các giá trị: `BLUE-BLUELIGHT`, `PURPLE-BLUE`, `SKYBLUE-GREEN`, `GREEN-GREENLIGHT`. Nếu không được chỉ định trước và Avatar là string thì giá trị sẽ được tính toán trước dựa trên nội dung Avatar
     * @type GradientVariants
     */
    backgroundColor?: keyof typeof GradientVariants;
    /** Hiển thị trạng thái block của Avatar */
    blocked?: boolean;
    /**
     * Event click vào Avatar
     *
     * @type MouseEventHandler
     */
    onClick?: React.MouseEventHandler<HTMLElement>;
    /** ReactNode */
    children?: React.ReactNode;
}

/**
 * @category Data Display
 * @subcategory Avatar
 * @displayName Avatar.Group
 *
 */
export interface AvatarGroupProps {
    id?: string;
    className?: string;
    style?: React.CSSProperties;
    /** Số lượng Avatar tối đa có thể hiển thị trong group */
    maxCounter?: number;
    /** Tổng số avatar */
    total?: number;
    /** Hiển thị các Avatar dạng ngang */
    horizontal?: boolean;
    /**
     * Sự kiện click vào counter
     *
     * @type MouseEventHandler
     */
    onCounterClick?: React.MouseEventHandler<HTMLElement>;
    /** ReactNode */
    children?: React.ReactNode;
}

export interface CompoundedComponent
    extends React.ForwardRefExoticComponent<
        AvatarProps & React.RefAttributes<HTMLDivElement>
    > {
    Group: React.FunctionComponent<AvatarGroupProps>;
}

declare const Avatar: CompoundedComponent;

export default Avatar;


